diff --git a/node_modules/mapbox-gl-draw-waypoint/dist/mapbox-gl-draw-waypoint.min.js b/node_modules/mapbox-gl-draw-waypoint/dist/mapbox-gl-draw-waypoint.min.js
index bbbc97a..743ea3e 100644
--- a/node_modules/mapbox-gl-draw-waypoint/dist/mapbox-gl-draw-waypoint.min.js
+++ b/node_modules/mapbox-gl-draw-waypoint/dist/mapbox-gl-draw-waypoint.min.js
@@ -1,2 +1,2 @@
-!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).MapboxDrawWaypoint={})}(this,(function(e){"use strict";var t=function(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e};const r="move",n="pointer",o="none",c="Point",i="simple_select",u="direct_select",s="feature",a="midpoint",f="vertex",p="false";function O(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){const r=function(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?O(Object(n),!0).forEach((function(r){t(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):O(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},e);return r.clickOnFeature=function(t,r){r.featureTarget.geometry.type!==c?this.changeMode(u,{featureId:r.featureTarget.properties.id}):(e.clickOnFeature.call(this,t,r),this.setSelected(r.featureTarget.properties.id))},r}function b(e){return function(t){const r=t.featureTarget;return!!r&&(!!r.properties&&r.properties.meta===e)}}function y(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function g(e,O=(()=>!0)){const l=function(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?y(Object(n),!0).forEach((function(r){t(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):y(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},e);return l.clickInactive=function(e,t){t.featureTarget.geometry.type!==c?this.changeMode(u,{featureId:t.featureTarget.properties.id}):this.changeMode(i,{featureIds:[t.featureTarget.properties.id]})},l.dragFeature=function(t,r,n){const o=t.feature.toGeoJSON();O(o)||e.dragFeature.call(this,t,r,n)},l.onMouseMove=function(t,c){const i=e.onMouseMove.call(this,t,c),u=t.feature.toGeoJSON();if(O(u)){const e=function(e){return!!e.featureTarget&&(!!e.featureTarget.properties&&(e.featureTarget.properties.active===p&&e.featureTarget.properties.meta===s))}(c),t=b(f)(c),i=b(a)(c);e||i?this.updateUIClasses({mouse:n}):t?this.updateUIClasses({mouse:r}):this.updateUIClasses({mouse:o})}return i},l}function d(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function j(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?d(Object(n),!0).forEach((function(r){t(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):d(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}e.enable=function(e,t=(()=>!0)){return j(j({},e),{},{[i]:l(e[i]),[u]:g(e[u],t)})},Object.defineProperty(e,"__esModule",{value:!0})}));
+!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).MapboxDrawWaypoint={})}(this,(function(e){"use strict";var t=function(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e};const r="move",n="pointer",o="none",c="Point",i="simple_select",u="direct_select",s="feature",a="midpoint",f="vertex",p="false";function O(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){const r=function(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?O(Object(n),!0).forEach((function(r){t(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):O(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},e);return r.clickOnFeature=function(t,r){if(r.originalEvent && r.originalEvent.shiftKey === true){e.clickOnFeature.call(this,t,r);return }; r.featureTarget.geometry.type!==c?this.changeMode(u,{featureId:r.featureTarget.properties.id}):(e.clickOnFeature.call(this,t,r),this.setSelected(r.featureTarget.properties.id))},r}function b(e){return function(t){const r=t.featureTarget;return!!r&&(!!r.properties&&r.properties.meta===e)}}function y(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function g(e,O=(()=>!0)){const l=function(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?y(Object(n),!0).forEach((function(r){t(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):y(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},e);return l.clickInactive=function(e,t){t.featureTarget.geometry.type!==c?this.changeMode(u,{featureId:t.featureTarget.properties.id}):this.changeMode(i,{featureIds:[t.featureTarget.properties.id]})},l.dragFeature=function(t,r,n){const o=t.feature.toGeoJSON();O(o)||e.dragFeature.call(this,t,r,n)},l.onMouseMove=function(t,c){const i=e.onMouseMove.call(this,t,c),u=t.feature.toGeoJSON();if(O(u)){const e=function(e){return!!e.featureTarget&&(!!e.featureTarget.properties&&(e.featureTarget.properties.active===p&&e.featureTarget.properties.meta===s))}(c),t=b(f)(c),i=b(a)(c);e||i?this.updateUIClasses({mouse:n}):t?this.updateUIClasses({mouse:r}):this.updateUIClasses({mouse:o})}return i},l}function d(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function j(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?d(Object(n),!0).forEach((function(r){t(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):d(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}e.enable=function(e,t=(()=>!0)){return j(j({},e),{},{[i]:l(e[i]),[u]:g(e[u],t)})},Object.defineProperty(e,"__esModule",{value:!0})}));
 //# sourceMappingURL=mapbox-gl-draw-waypoint.min.js.map
diff --git a/node_modules/mapbox-gl-draw-waypoint/src/modes/simple_select.js b/node_modules/mapbox-gl-draw-waypoint/src/modes/simple_select.js
index f7446be..8feb5f2 100644
--- a/node_modules/mapbox-gl-draw-waypoint/src/modes/simple_select.js
+++ b/node_modules/mapbox-gl-draw-waypoint/src/modes/simple_select.js
@@ -1,9 +1,15 @@
 import * as Constants from '../constants';
 
+import { isShiftDown } from '@mapbox/mapbox-gl-draw/src/lib/common_selectors';
+
 function patchSimpleSelect(SimpleSelect) {
   const SimpleSelectPatched = { ...SimpleSelect };
   
   SimpleSelectPatched.clickOnFeature = function(state, e) {
+    if(isShiftDown(e)) {
+      SimpleSelect.clickOnFeature.call(this, state, e)
+      return 
+    }
     if (e.featureTarget.geometry.type !== Constants.geojsonTypes.POINT) {
       // switch to direct_select mode for polygon/line features
       this.changeMode(Constants.modes.DIRECT_SELECT, {
